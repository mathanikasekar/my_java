stream:
 -to take elements in an order (like for loop)

source:
 -collections,list,set,array,int,long,double,lines of file
operations:
 -intermediate:
  -filter
  -map
  -sort
   -->anyMatch()  distinct()
   -->filter()    findFirst()
   -->map()       flatmap()
   -->sorted()    skip()

 -terminal
  -for each
  -collect/reduce
   -->count()  reduce()  summaryStatistics
   -->max()    min()

   /*
   filter(variable->variable.inbuilt_function())
     -filter should be used with stream using dot operator
     -to print that we can not do directly we should use foreach loop using dot operator
    */

   package java8;
   import org.w3c.dom.ls.LSOutput;
   import java.lang.reflect.Array;
   import java.util.*;
   import java.io.*;
   import java.lang.*;
   import java.util.stream.*;
   public class StreamExample
   {
       public static void main(String[] args)
       {
           Scanner scanner=new Scanner(System.in);
           String s1[]={"deva","lakshmi","anu","butta","papu","priya","mathu","mathanika"};
           List <String>l1= Arrays.asList(s1);
          l1.stream().filter(x->x.startsWith
                  ("m")).forEach(x-> System.out.println(x));
       }
   }
